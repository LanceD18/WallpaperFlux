<views:MvxWpfView x:Class="WallpaperFlux.WPF.Views.TagView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
             xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             xmlns:tagging="clr-namespace:WallpaperFlux.Core.Models.Tagging;assembly=WallpaperFlux.Core"
             xmlns:controls="clr-namespace:WallpaperFlux.Core.Models.Controls;assembly=WallpaperFlux.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:viewModels="clr-namespace:WallpaperFlux.Core.ViewModels;assembly=WallpaperFlux.Core"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:wpf="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
             mc:Ignorable="d" FontSize="12" FontFamily="Segoe UI"
             d:DesignHeight="450" d:DesignWidth="800"
             BorderBrush="{Binding WindowBorderBrushColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
             BorderThickness="{Binding WindowBorderThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
             SizeChanged="TagView_OnSizeChanged_UpdateDrawerHeight">

    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <system:Double x:Key="TagboardWidth">375</system:Double>
            <system:Double x:Key="FolderPriorityWidth">275</system:Double>
            <system:Double x:Key="RankGraphHeight">300</system:Double>
        </ResourceDictionary>
    </views:MvxWpfView.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="8"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8"/>
        </Grid.RowDefinitions>

        <!--? Toolbar -->
        <Menu Grid.Row="1" Grid.Column="1" Padding="2">
            <!-- Categories -->
            <MenuItem Header="Categories">
                <MenuItem Header="Add" mvx:Bi.nd="Command AddCategoryCommand"/>
                <!-- <MenuItem Header="Remove"/> -->
            </MenuItem>

            <!-- Tags -->
            <MenuItem Header="Tags">
                <MenuItem Header="Add" mvx:Bi.nd="Command AddTagToSelectedCategoryCommand" IsEnabled="{Binding CategoryIsSelected}"/>
                <!-- <MenuItem Header="Remove"/> -->

                <Separator/>

                <MenuItem Header="Toggle Tag-Adder" IsCheckable="True" IsChecked="{Binding TagAdderToggle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.ToolTip>
                        While this toggle is enabled every tag you click will be added to or removed from the selected image. The tags of the selected image will be highlighted
                    </MenuItem.ToolTip>
                </MenuItem>
                <MenuItem Header="Toggle Tag-Linker" IsCheckable="True"
                          IsChecked="{Binding TagLinkerToggle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          IsEnabled="{Binding CanUseTagLinker, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.ToolTip>
                        While this toggle is enabled every tag you click will be linked to or unlinked from the selected tag. The already linked tags will be highlighted
                    </MenuItem.ToolTip>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Options">
                <!-- Open a drawer menu that shows priorities -->
                <MenuItem Header="View Folder Priority" Command="{Binding ViewFolderPriorityCommand}"/>
                <MenuItem Header="Hide Disabled Tags" IsCheckable="True" StaysOpenOnClick="True" IsChecked="{Binding HideDisabledTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <MenuItem Header="Use Selection Options Filter" IsCheckable="True" StaysOpenOnClick="True" IsChecked="{Binding SelectionOptionsFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Filters your selection to the options set in the image selector"/>
            </MenuItem>
        </Menu>

        <Separator Grid.Row="2" Grid.Column="1"/>

        <!--? Categories & Tags -->
        <GroupBox Grid.Row="3" Grid.Column="1" adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:LayerExtension.Layer="2">
            <!-- Header -->
            <GroupBox.Header>
                <StackPanel Orientation="Vertical" SizeChanged="CategoryTabControl_OnSizeChanged" x:Name="CategoryHeaderPanel">
                    <TextBlock Text="Right-Click a Category or Tag for more options" Margin="0 0 0 5">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Text="{Binding EditingTagsText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5"
                               Visibility="{Binding EditingTags, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Foreground="{Binding WindowBorderBrushColor, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </GroupBox.Header>

            <StackPanel Orientation="Vertical">
                <!--? Category TabControl -->
                <TabControl x:Name="CategoryTabControl" ItemsSource="{Binding Categories}" 
                            SelectedItem="{Binding SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            adonisExtensions:LayerExtension.IncreaseLayer="True">

                    <!-- Drag n' Drop Control -->
                    <TabControl.Resources>
                        <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                            <Setter Property="AllowDrop" Value="True"/>
                            <EventSetter Event="PreviewMouseMove" Handler="TabItem_PreviewMouseMove"/>
                            <EventSetter Event="Drop" Handler="TabItem_Drop"/>
                        </Style>
                    </TabControl.Resources>

                    <!-- Category Item Template [Header] -->
                    <TabControl.ItemTemplate>
                        <DataTemplate DataType="tagging:CategoryModel">
                            <TextBlock Text="{Binding Name}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{Binding Name}" IsEnabled="False"/>
                                        <Separator/>
                                        <MenuItem Header="{Binding TagCountString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                                        <MenuItem Header="Rename" Command="{Binding RenameCategoryCommand}"/>
                                        <MenuItem Header="Delete" Command="{Binding RemoveCategoryCommand}"/>
                                        <MenuItem Header="Enabled" IsCheckable="True"  StaysOpenOnClick="True" 
                                              IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <MenuItem Header="Use For Naming" IsCheckable="True"  StaysOpenOnClick="True" 
                                              IsChecked="{Binding UseForNaming, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DataTemplate>
                    </TabControl.ItemTemplate>

                    <!-- Control Template [Enables Scrolling for the Tabs] -->
                    <TabControl.Template>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                    <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Margin="0,4,0,0"/>
                                </ScrollViewer>
                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" Grid.Row="1"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <!-- Content Template [Core Content/ListBox] -->
                    <!--? Category Header -->
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="tagging:CategoryModel">
                            <StackPanel Orientation="Vertical">
                                <!-- Search & Sort -->
                                <GroupBox>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="4"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="4"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="4"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="4"/>
                                        </Grid.RowDefinitions>

                                        <!-- Search Text -->
                                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             adonisExtensions:WatermarkExtension.Watermark="Search Tag..." Margin="5 0 5 5"
                                             ToolTip="Press Enter to Confirm" KeyDown="SearchBar_OnKeyDown"/>

                                        <!-- Clears the Search Text -->
                                        <Button Grid.Row="1" Grid.Column="1"  Content="X" Foreground="Red" Width="25" Height="24" HorizontalAlignment="Right" VerticalAlignment="Top"
                                            Command="{Binding ClearSearchCommand}"/>

                                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="5 5 5 0">
                                            <!-- Sorting -->
                                            <TextBlock Text="Sort By: " VerticalAlignment="Center"/>
                                            <Button Content="Name" Margin="5 0 5 0" Command="{Binding ToggleSortByNameCommand}"/>
                                            <Button Content="Count" Margin="0 0 5 0" Command="{Binding ToggleSortByCountCommand}"/>

                                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                                            <!-- TagBoard -->
                                            <TextBlock Text="Tagboard: " Margin="5 0 0 0" VerticalAlignment="Center"/>
                                            <Button Content="View" Margin="5 0 5 0" Command="{Binding ViewTagBoardCommand}"/>
                                            <Button Content="Add" Margin="0 0 5 0" Command="{Binding AddSelectedTagsToTagBoardCommand}"
                                                ToolTip="Add selected tags to the Tagboard"/>
                                            <Button Content="Clear" Margin="0 0 5 0" Command="{Binding ClearTagBoardCommand}"/>

                                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                                            <!-- Image Selection -->
                                            <TextBlock Text="Select Images With: " Margin="5 0 0 0" VerticalAlignment="Center"/>
                                            <Button Content="Every Sel. Tag" Margin="5 0 5 0" Command="{Binding SelectImagesWithEverySelTag}"/>
                                            <Button Content="Any Sel. Tag" Margin="0 0 5 0" Command="{Binding SelectImagesWithAnySelTag}"/>
                                            <Button Content="Any Tag In Category" Margin="0 0 5 0" Command="{Binding SelectImagesWithAnyCategoryTag}"/>

                                        </StackPanel>
                                    </Grid>
                                </GroupBox>

                                <!-- TODO Consider adding this and the complementary Category header at some point to clear up the info of a 'blank' (no categories) page -->
                                <!-- <TextBlock Text="Tags" Margin="5">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                </TextBlock.Style>
                            </TextBlock> -->

                                <!--? Tag Tab Control -->
                                <!--x<GroupBox>-->
                                <TabControl ItemsSource="{Binding TagTabs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                SelectedItem="{Binding SelectedTagTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                                    <!-- Item Template [Index] -->
                                    <!--? Page Index -->
                                    <TabControl.ItemTemplate>
                                        <DataTemplate DataType="controls:TagTabModel">
                                            <TextBlock Text="{Binding TabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </TabControl.ItemTemplate>

                                    <!-- Control Template [Enables Scrolling for the Tabs] -->
                                    <TabControl.Template>
                                        <ControlTemplate TargetType="{x:Type TabControl}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                                    <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Margin="0,4,0,0"/>
                                                </ScrollViewer>
                                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" Grid.Row="1"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </TabControl.Template>

                                    <!-- Tag List Content Template [Core Content/ListBox] -->
                                    <TabControl.ContentTemplate>
                                        <DataTemplate>
                                            <!-- This is just here to ease Tab selection, placing the Listbox for tags here would significantly slow down selection -->
                                        </DataTemplate>
                                    </TabControl.ContentTemplate>
                                    
                                </TabControl>
                                <!--x</GroupBox>-->
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>

                <!--!<DataTemplate DataType="controls:TagTabModel">-->
                <!--? Keep the option to scroll since we're still allowing the window to be resized -->
                <ListBox x:Name="VisibleTagsListBox" ItemsSource="{Binding VisibleTags}" SelectedItem="{Binding SelectedTag}" SelectionMode="Extended"
                                                 Height="{Binding TagWrapHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="True"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement="Overlay"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode="ExpandOnHover"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                 PreviewMouseDown="TagTabControl_ListBoxItem_OnPreviewMouseDown"
                                                 VirtualizingPanel.IsVirtualizing="true"
                                                 VirtualizingPanel.VirtualizationMode="Recycling"
                                                 SelectionChanged="CategoryTabControl_OnSelectionChanged">

                    <!-- Wrap Setup -->
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" Width="{Binding TagWrapWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <!-- Item Container Style [Handles Selection of multiple items by binding to the IsSelected property of the object] -->
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Visibility" Value="{Binding IsHidden, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,
                                                            Converter={StaticResource BooleanToVisibilityInvertedConverter}}"/>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <!--? Tags Item Template -->
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="tagging:TagModel">
                            <!-- The GroupBox adds a fitting adonis background to every tag -->
                            <GroupBox  adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:CornerRadiusExtension.CornerRadius="15">
                                <!-- This interaction trigger allows us to highlight images used by a given tag when the tag is clicked on -->
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction Command="{Binding TagInteractCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <!--? Tag Text Block -->
                                <TextBlock>
                                    <Run Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Run Text="{Binding ImageCountStringTag, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <!-- ! Trying to use RaisePropertyChanged() for this would be improbable -->
                                    <!-- ! Trying to use RaisePropertyChanged() for this would be improbable -->
                                    <!-- ! Trying to use RaisePropertyChanged() for this would be improbable -->
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <!-- In Selected Image(s) Tag Highlight -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsHighlighted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedInSomeImages, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedParent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedChild, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="LimeGreen"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <!-- In Some Selected Images Tag Highlight -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsHighlighted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedInSomeImages, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedParent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedChild, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="YellowGreen"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <!-- Parent Tag Highlight -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsHighlighted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedInSomeImages, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedParent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedChild, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="Yellow"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <!-- Child Tag Highlight -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsHighlighted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                        <Condition Binding="{Binding IsHighlightedInSomeImages, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedParent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                                        <Condition Binding="{Binding IsHighlightedChild, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="Blue"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!--? Tag Context Menu -->
                                <GroupBox.ContextMenu>
                                    <ContextMenu>
                                        <!-- Core -->
                                        <MenuItem Header="{Binding Name}" IsEnabled="False"/>
                                        <MenuItem Header="{Binding ImageCountStringContextMenu}" IsEnabled="False"/>
                                        <Separator/>
                                        <MenuItem Header="Rename" Command="{Binding RenameTagCommand}"/>
                                        <MenuItem Header="Delete" Command="{Binding RemoveTagCommand}"/>
                                        <MenuItem Header="Frequencies" SubmenuOpened="MenuItem_OnSubmenuOpened">
                                            <MenuItem Header="{Binding RelativeFrequencyText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                      Command="{Binding ChangeRelativeFrequencyCommand}"/>
                                            <MenuItem IsEnabled="False" Header="{Binding ExactFrequencyText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </MenuItem>

                                        <Separator/>

                                        <!-- Image Control & Linking-->
                                        <MenuItem Header="Image Control">
                                            <MenuItem Header="Select Images with Tag" Command="{Binding SelectImagesWithTag}"/>
                                            <MenuItem Header="Add To">
                                                <MenuItem Header="Selected Image(s)" Command="{Binding AddTagToSelectedImagesCommand}"/>
                                                <MenuItem Header="Entire Image Group" Command="{Binding AddTagToEntireImageGroupCommand}"/>
                                            </MenuItem>
                                            <MenuItem Header="Remove From">
                                                <MenuItem Header="Selected Image(s)" Command="{Binding RemoveTagFromSelectedImagesCommand}"/>
                                                <MenuItem Header="Entire Image Group" Command="{Binding RemoveTagFromEntireImageGroupCommand}"/>
                                            </MenuItem>
                                        </MenuItem>
                                        <MenuItem Header="Tag Linking">
                                            <!--x<MenuItem Header="Link to Tag" Command="{Binding LinkTagCommand}"/>-->
                                            <MenuItem Header="Show Parent Tags"/>
                                            <MenuItem Header="Show Child Tags"/>
                                        </MenuItem>

                                        <Separator/>

                                        <MenuItem Header="{Binding RenameFolderContextMenuString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"
                                                                          ToolTip="The rename folder helps to determine what folder an image will be assigned to upon renaming"/>
                                        <MenuItem Header="Assign Rename Folder" Command="{Binding AssignRenameFolderCommand}"
                                                                          ToolTip="The rename folder helps to determine what folder an image will be assigned to upon renaming"/>
                                        <MenuItem Header="Remove Rename Folder" Command="{Binding RemoveRenameFolderCommand}"
                                                                          ToolTip="The rename folder helps to determine what folder an image will be assigned to upon renaming"/>

                                        <Separator/>

                                        <!-- Checkboxes -->
                                        <MenuItem Header="Enabled" IsCheckable="True" StaysOpenOnClick="True" 
                                                                              IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <MenuItem Header="Use For Naming" IsCheckable="True" StaysOpenOnClick="True" 
                                                                              IsChecked="{Binding UseForNaming, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <Separator/>

                                        <MenuItem Header="Show Rank Distribution Graph" Command="{Binding ToggleRankGraphCommand}"/>
                                    </ContextMenu>
                                </GroupBox.ContextMenu>
                            </GroupBox>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--!</DataTemplate>-->
            </StackPanel>
        </GroupBox>

        <!--? Tagboard Drawer -->
        <hc:Drawer Dock="Right" ShowMode="Cover" IsOpen="{Binding TagboardToggle}">
            <GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="{adonisUi:Space 1}"/>-->
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Width="{StaticResource TagboardWidth}"
                              Grid.Row="2" Grid.Column="1" adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:LayerExtension.Layer="2">
                        <!--? Header -->
                        <GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Title -->
                                <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Tagboard" FontWeight="Medium" Margin="0 0 0 5">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Exit -->
                                <Button Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right" Content="X" Command="{Binding CloseTagBoardCommand}"
                                        Margin="5 0 5 0" Foreground="Red" FontSize="16" FontWeight="Bold" adonisExtensions:LayerExtension.Layer="1"/>

                                <!-- Header Buttons -->
                                <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                            adonisExtensions:LayerExtension.IncreaseLayer="True" Margin="0 5 0 0">
                                    <Button Content="Select Images" Margin="5 0 5 0" Command="{Binding SelectImagesFromTagBoardCommand}"/>

                                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

                                    <TextBlock Text="Set All: " Margin="5 0 0 0" VerticalAlignment="Center"/>
                                    <Button Content="+" Margin="5 0 5 0" Command="{Binding SetMandatoryTagBoardSelectionCommand}" FontWeight="Medium"
                                            adonisExtensions:CursorSpotlightExtension.BorderBrush="White" ToolTip="Mandatory (Selection *must* have this tag)"/>
                                    <Button Content="~" Margin="5 0 5 0" Command="{Binding SetOptionalTagBoardSelectionCommand}" FontWeight="Medium"
                                            Foreground="LimeGreen" adonisExtensions:CursorSpotlightExtension.BorderBrush="LimeGreen" ToolTip="Optional (Selection *may* have this tag)"/>
                                    <Button Content="-" Margin="5 0 5 0" Command="{Binding SetExcludedTagBoardSelectionCommand}" FontWeight="Medium"
                                            Foreground="Red" adonisExtensions:CursorSpotlightExtension.BorderBrush="Red" ToolTip="Excluded (Selection *cannot* have this tag)"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox.Header>

                        <!--? ListBox  -->
                        <ListBox ItemsSource="{Binding TagBoardTags}" SelectionMode="Extended" 
                                 Height="{Binding DrawerHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                 adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="True"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement="Overlay"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode="ExpandOnHover"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                            <!-- Wrap Setup -->
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" Width="{StaticResource TagboardWidth}"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <!-- Tags Item Template -->
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="tagging:TagModel">
                                    <!-- The GroupBox adds a fitting adonis background to every tag -->
                                    <GroupBox  adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:CornerRadiusExtension.CornerRadius="15">
                                        <StackPanel Orientation="Horizontal">
                                            <Button VerticalAlignment="Center" Content="{Binding SearchTypeString}" ToolTip="{Binding SearchTypeToolTip}"
                                                    Foreground="{Binding SearchTypeColor,  Converter={StaticResource ColorToBrushConverter}}"
                                                    Command="{Binding CycleSearchTypeCommand}"
                                                    adonisExtensions:RippleExtension.FadeInDuration="0"
                                                    adonisExtensions:RippleExtension.FadeOutDuration="0"
                                                    adonisExtensions:RippleExtension.ForegroundBrush="{Binding SearchTypeColor,  Converter={StaticResource ColorToBrushConverter}}"
                                                    FontSize="10" FontWeight="Medium" Margin="0 0 5 0" BorderThickness="0" Width="22"/>
                                            <!-- ! Without a set width, the excluded parameter will change the size of the button and cause potential formatting jumps -->
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                       Foreground="{Binding SearchTypeColor,  Converter={StaticResource ColorToBrushConverter}}"/>
                                            <Button VerticalAlignment="Center" Content="X"  Command="{Binding RemoveTagFromTagBoardCommand}" 
                                                    Foreground="Red" FontSize="10" FontWeight="Medium" Margin="5 0 0 0" BorderThickness="0" />
                                        </StackPanel>
                                    </GroupBox>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                </Grid>
            </GroupBox>

        </hc:Drawer>

        <!--? Folder Priority Drawer -->
        <hc:Drawer Dock="Left" ShowMode="Cover" IsOpen="{Binding FolderPriorityToggle}">
            <GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="{adonisUi:Space 1}"/>-->
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Width="{StaticResource FolderPriorityWidth}"
                              Grid.Row="2" Grid.Column="1" adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:LayerExtension.Layer="2">
                        <!--? Header -->
                        <GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Title -->
                                <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Folder Priority" FontWeight="Medium" Margin="0 0 0 5">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Exit -->
                                <Button Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right" Content="X" Command="{Binding CloseFolderPriorityCommand}"
                                        Margin="5 0 5 0" Foreground="Red" FontSize="16" FontWeight="Bold" adonisExtensions:LayerExtension.Layer="1"/>

                                <!-- Header Buttons -->
                                <StackPanel Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                            adonisExtensions:LayerExtension.IncreaseLayer="True" Margin="0 5 0 5">
                                    <Button Content="Create" Margin="5 0 5 0" Command="{Binding CreatePriorityCommand}"
                                            adonisExtensions:CursorSpotlightExtension.BorderBrush="LimeGreen"
                                            adonisExtensions:RippleExtension.BackgroundBrush="LimeGreen"/>
                                    <Button Content="Delete" Margin="5 0 5 0" Command="{Binding DeleteSelectedPrioritiesCommand}" 
                                            IsEnabled="{Binding CanDeletePriorities, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                            adonisExtensions:CursorSpotlightExtension.BorderBrush="Red"
                                            adonisExtensions:RippleExtension.BackgroundBrush="Red"/>
                                </StackPanel>
                                <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 5 0 0">
                                    <TextBlock VerticalAlignment="Center">
                                        <Run Text="Default Resolution ["/>
                                        <Run Text="{Binding DefaultConflictResolutionPathText}"/>
                                        <Run Text="] "/>
                                    </TextBlock>
                                    <Button Content="Set" Command="{Binding AssignDefaultResolutionCommand}" adonisExtensions:LayerExtension.Layer="1" Margin="0 0 3 0"/>
                                    <Button Content="Clear" Command="{Binding RemoveDefaultResolutionCommand}" adonisExtensions:LayerExtension.Layer="1"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox.Header>

                        <!-- TODO Reorderable List -->
                        <!-- TODO User can create or delete priorities -->
                        <!-- TODO Priority Context Menu: Show Contained folders, Assign Conflict Solution Folder -->

                        <!--? Folder Priority ListBox  -->
                        <ListBox ItemsSource="{Binding FolderPriorities}" SelectionMode="Extended" SelectedItem="{Binding SelectedFolderPriority}" 
                                 Height="{Binding DrawerHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                 adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="True"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement="Overlay"
                                                 adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode="ExpandOnHover"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                            <!-- Wrap Setup -->
                            <!--
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical" IsItemsHost="True" Width="{StaticResource TagboardWidth}"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            -->

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Setter Property="AllowDrop" Value="True"/>
                                    <EventSetter Event="PreviewMouseMove" Handler="ListBoxItem_FolderPriority_PreviewMouseMove"/>
                                    <EventSetter Event="Drop" Handler="ListBoxItem_FolderPriority_Drop"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            
                            <!--? Folder Priority Item Template -->
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="tagging:FolderPriorityModel">
                                    <!-- The GroupBox adds a fitting adonis background to every tag -->
                                    <GroupBox adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:CornerRadiusExtension.CornerRadius="15">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        <!--? Folder Priority Context Menu -->
                                        <GroupBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                                                <MenuItem Header="Rename" Command="{Binding RenameCommand}"/>
                                                <MenuItem Header="Assign Folder(s)" Command="{Binding AssignFolderCommand}"/>
                                                <MenuItem Header="Remove Folder(s)" Command="{Binding RemoveFolderCommand}"/>
                                                <MenuItem Header="List Assigned Folders" Command="{Binding ListAssignedFoldersCommand}"/>

                                                <Separator/>

                                                <MenuItem Header="{Binding ConflictResolutionFolderContextMenuText}" IsEnabled="False"/>
                                                <MenuItem Header="Assign Conflict Resolution Folder" Command="{Binding AssignConflictResolutionFolderCommand}"/>
                                                <MenuItem Header="Remove Conflict Resolution Folder" Command="{Binding RemoveConflictResolutionFolderCommand}"/>

                                                <Separator/>

                                                <MenuItem Header="{Binding PriorityOverrideText}" IsEnabled="False"/>
                                                <MenuItem Header="Override Priority"
                                                          Command="{Binding OverridePriorityCommand}"
                                                          ToolTip="Set to -1 to disable | Overrides the positional priority. If the default conflict resolution is not applicable, use the override instead"/>
                                            </ContextMenu>
                                        </GroupBox.ContextMenu>
                                    </GroupBox>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                </Grid>
            </GroupBox>

        </hc:Drawer>

        <!--? Rank Graph Drawer -->
        <hc:Drawer Dock="Bottom" ShowMode="Cover" IsOpen="{Binding RankGraphToggle}">
            <GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="{adonisUi:Space 1}"/>-->
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- You can just drag the window to see more tags if need be -->
                    <GroupBox Height="{StaticResource RankGraphHeight}"
                              Grid.Row="2" Grid.Column="1" adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:LayerExtension.Layer="2">
                        <!--? Header -->
                        <GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Title -->
                                <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Rank Distribution Graph"
                                           FontWeight="Medium" Margin="0 0 0 5">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Tag Name -->
                                <TextBlock Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           FontStyle="Normal" Text="{Binding SelectedTagName}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"  Orientation="Horizontal" Margin="0 5 0 0" HorizontalAlignment="Center"
                                            adonisExtensions:LayerExtension.Layer="3">
                                    <CheckBox Content="All" IsChecked="{Binding AllColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="Static" IsChecked="{Binding StaticColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="GIF" IsChecked="{Binding GifColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="Video" IsChecked="{Binding VideoColumnToggle}" Margin="0 0 10 0"/>
                                </StackPanel>

                                <!-- Exit -->
                                <Button Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right" Content="X" Command="{Binding CloseRankGraphCommand}"
                                        Margin="5 0 5 0" Foreground="Red" FontSize="16" FontWeight="Bold" adonisExtensions:LayerExtension.Layer="1"/>
                            </Grid>
                        </GroupBox.Header>

                        <wpf:CartesianChart Series="{Binding RankSeries}" LegendPosition="Top" ZoomMode="X"/>

                    </GroupBox>
                </Grid>
            </GroupBox>

        </hc:Drawer>

    </Grid>
</views:MvxWpfView>
