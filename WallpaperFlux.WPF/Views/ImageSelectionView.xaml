<views:MvxWpfView x:Class="WallpaperFlux.WPF.Views.ImageSelectionView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:WallpaperFlux.WPF.Views"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                  mc:Ignorable="d" FontSize="12" FontFamily="Segoe UI"
                  Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="0"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="4"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="4"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10 0 10 0">
            <CheckBox Content="Randomize" HorizontalAlignment="Center" Margin="5" adonisExtensions:LayerExtension.Layer="1" IsChecked="{Binding Randomize}"/>
            <CheckBox Content="Reverse" HorizontalAlignment="Center" Margin="5" adonisExtensions:LayerExtension.Layer="1" IsChecked="{Binding Reverse}"/>
            <CheckBox Content="Date" HorizontalAlignment="Center" Margin="5" adonisExtensions:LayerExtension.Layer="1" IsChecked="{Binding DateTime}"/>
        </StackPanel>

        <GroupBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" Margin="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="0"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center"  Margin="10 0 10 0">
                    <Button Content="Select Images" Margin="5" Command="{Binding SelectImagesCommand}"/>
                    <!--x
                    <Button Content="Select Images of Type" Margin="0 3 0 3" Command="{Binding SelectImagesOfTypeCommand}"/>
                    -->
                    <Button Content="Select Images in Folder" Margin="5" Command="{Binding SelectImagesInFolderCommand}"/>
                    <CheckBox HorizontalAlignment="Center" Margin="5" Content="Tagboard Filter" ToolTip="Filters based on the current Tagboard selection" IsChecked="{Binding TagboardFilter}"/>
                </StackPanel>

                <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center" Margin="10 0 10 0">
                    <!-- TODO Perhaps keep track of the last checked RadioButton and save to theme (or globally) [Would use IsChecked property to set that here] -->
                    <StackPanel Orientation="Horizontal">
                        <!--? Rank Type -->
                        <StackPanel Orientation="Vertical" Margin="0 0 5 0" VerticalAlignment="Center">
                            <RadioButton Content="All Ranks" GroupName="SelectionType" Margin="0 5 0 5" IsChecked="{Binding RadioAllRanks}"/>
                            <RadioButton Content="Unranked" GroupName="SelectionType" Margin="0 5 0 5" IsChecked="{Binding RadioUnranked}"/>
                            <RadioButton Content="Ranked" GroupName="SelectionType" Margin="0 5 0 5" IsChecked="{Binding RadioRanked}"/>
                            <!--? Additional Rank Types -->
                            <StackPanel Orientation="Horizontal" Margin="0 5 0 5">
                                <!-- Specific Rank -->
                                <RadioButton Content="Specific Rank" GroupName="SelectionType" Margin="0 0 5 0" IsChecked="{Binding RadioSpecificRank}"/>
                                <TextBox Margin="5 0 5 0" Text="{Binding SpecifiedRank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Rank">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                                    </TextBox.Style>
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <!-- Rank Range -->
                                <RadioButton Content="Rank Range" GroupName="SelectionType" Margin="0 0 5 0" IsChecked="{Binding RadioRankRange}"/>
                                <TextBox Margin="5 0 5 0"  Text="{Binding MinSpecifiedRank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Min">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock Text="-" VerticalAlignment="Center"/>
                                <TextBox Margin="5 0 5 0"  Text="{Binding MaxSpecifiedRank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Max">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                                    </TextBox.Style>
                                </TextBox>
                            </StackPanel>
                        </StackPanel>
                        <!--? Image Type -->
                        <StackPanel Orientation="Vertical" Margin="10 0 0 0" VerticalAlignment="Center">
                            <RadioButton Content="All Types" GroupName="ImageType" Margin="0 5 0 5" IsChecked="{Binding RadioAllTypes}"/>
                            <RadioButton Content="Static" GroupName="ImageType" Margin="0 5 0 5" IsChecked="{Binding RadioStatic}"/>
                            <RadioButton Content="Gif" GroupName="ImageType" Margin="0 5 0 5" IsChecked="{Binding RadioGif}"/>
                            <RadioButton Content="Video" GroupName="ImageType" Margin="0 5 0 5" IsChecked="{Binding RadioVideo}"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </GroupBox>

        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Select Active Wallpapers" Margin="5" HorizontalAlignment="Center" Command="{Binding SelectActiveWallpapersCommand}"
                    adonisExtensions:LayerExtension.Layer="3" BorderBrush="DimGray"/>

            <Button Content="Select Disabled Images" Margin="5" HorizontalAlignment="Center" Command="{Binding SelectDisabledImagesCommand}" 
                    Visibility="{Binding ShowDisabledSelector, Converter={StaticResource BooleanToVisibilityConverter}}"
                    adonisExtensions:LayerExtension.Layer="3" BorderBrush="DimGray" ToolTip="Requires [Enable Detection of Disabled Images] to be enabled"/>

            <CheckBox Content="Include Sets?" IsChecked="{Binding IncludeDependentImages}" Visibility="{Binding ShowDisabledSelector, Converter={StaticResource BooleanToVisibilityConverter}}"
                      adonisExtensions:LayerExtension.Layer="3" ToolTip="Classifies images dependent on sets as disabled when selecting disabled images"/>
        </StackPanel>

    </Grid>
</views:MvxWpfView>
