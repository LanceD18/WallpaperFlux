<views:MvxWpfView x:Class="WallpaperFlux.WPF.Views.SettingsView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                  xmlns:tagging="clr-namespace:WallpaperFlux.Core.Models.Tagging;assembly=WallpaperFlux.Core"
                  xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                  xmlns:system="clr-namespace:System;assembly=System.Runtime"
                  xmlns:hc="https://handyorg.github.io/handycontrol"
                  xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
                  mc:Ignorable="d" FontSize="12" FontFamily="Segoe UI"
                  d:DesignHeight="450" d:DesignWidth="800">

    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <system:Double x:Key="RankGraphHeight">475</system:Double>
        </ResourceDictionary>
    </views:MvxWpfView.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="8"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8"/>
        </Grid.RowDefinitions>

        <!--? Settings Title -->
        <TextBlock Grid.Row="1" Grid.Column="1" Text="Settings" FontSize="16" FontWeight="Bold" Margin="10"/>

        <!--? Rank Settings -->
        <GroupBox  Grid.Row="2" Grid.Column="1" Margin="3">
            <StackPanel Orientation="Vertical">

                <!-- Max Rank -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="5" VerticalAlignment="Center">
                        <Run Text="Max Rank: "/>
                        <Run Text="{Binding Settings.ThemeSettings.MaxRank, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TextBlock>
                    <!--! not yet implemented -->
                    <Button Content="Set Max Rank" Margin="3" mvx:Bi.nd="Command UpdateMaxRankCommand" IsEnabled="False"/>
                </StackPanel>

                <!-- Rank Shifting -->
                <StackPanel Orientation="Horizontal">
                    <Button Content="Shift Ranks" Margin="3" Command="{Binding ShiftRanksCommand}"/>
                    <!-- Min -->
                    <TextBlock Text="Range: " VerticalAlignment="Center"/>
                    <TextBox Margin="5 0 5 0"  Text="{Binding MinShiftRank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Min">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock Text="-" VerticalAlignment="Center"/>
                    <!-- Max -->
                    <TextBox Margin="5 0 5 0"  Text="{Binding MaxShiftRank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Max">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                        </TextBox.Style>
                    </TextBox>
                    <!-- Amount -->
                    <TextBlock Text="Amount: " VerticalAlignment="Center"/>
                    <TextBox Margin="5 0 5 0"  Text="{Binding ShiftAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             adonisExtensions:WatermarkExtension.IsWatermarkVisible="True" adonisExtensions:WatermarkExtension.Watermark="Amount">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInputPlusMinus}"/>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>

                <!-- Weighted Ranks -->
            <CheckBox Content="Weighted Ranks" IsChecked="{Binding Settings.ThemeSettings.WeightedRanks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                      adonisExtensions:LayerExtension.Layer="3"/>
            </StackPanel>
        </GroupBox>

        <!--? Image Frequency -->
        <GroupBox Grid.Row="3" Grid.Column="1" Margin="3" DataContext="{Binding Settings.ThemeSettings.FrequencyModel}">
            <Grid Focusable="True">

                <Grid.Resources>
                    <system:Double x:Key="ImageFrequencyTextBoxWidth">50</system:Double>
                    <Thickness x:Key="ImageFrequencyTextBoxMargin">10</Thickness>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Frequency Title -->
                <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="5" Text="Frequency" Margin="5" FontWeight="Bold" FontStyle="Italic" HorizontalAlignment="Center"
                           ToolTip="Frequency changes the rate at which the given file types are selected on wallpaper randomization. Press Enter to save your changes"/>

                <!-- Image Type Title Row -->
                <TextBlock Grid.Row="2" Grid.Column="2" Text="Static" HorizontalAlignment="Center" Margin="10, 0, 10, 0"/>
                <TextBlock Grid.Row="2" Grid.Column="3" Text="GIF" HorizontalAlignment="Center"  Margin="10, 0, 10, 0"/>
                <TextBlock Grid.Row="2" Grid.Column="4" Text="Video" HorizontalAlignment="Center"  Margin="10, 0, 10, 0"/>

                <!-- Relative Row -->
                <TextBlock Grid.Row="3" Grid.Column="1" Text="Relative" Margin="10" FontWeight="Bold"/>
                <!-- Static -->
                <TextBox Grid.Row="3" Grid.Column="2" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding RelativeFrequencyStatic, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>
                <!-- GIF -->
                <TextBox Grid.Row="3" Grid.Column="3" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding RelativeFrequencyGIF, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>
                <!-- Video -->
                <TextBox Grid.Row="3" Grid.Column="4" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding RelativeFrequencyVideo, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>

                <!-- Exact Row -->
                <TextBlock Grid.Row="4" Grid.Column="1" Text="Exact" Margin="10" FontWeight="Bold"/>
                <!-- Static -->
                <TextBox Grid.Row="4" Grid.Column="2" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding ExactFrequencyStatic, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>
                <!-- GIF -->
                <TextBox Grid.Row="4" Grid.Column="3" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding ExactFrequencyGIF, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>
                <!-- Video -->
                <TextBox Grid.Row="4" Grid.Column="4" Margin="{StaticResource ImageFrequencyTextBoxMargin}" Width="{StaticResource ImageFrequencyTextBoxWidth}"
                                 Text="{Binding ExactFrequencyVideo, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat='{}{0:0}%'}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                    </TextBox.Style>
                </TextBox>

                <!-- Frequency Settings -->
                <CheckBox Content="Weighted Frequency" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="4" adonisExtensions:LayerExtension.Layer="3"
                          IsChecked="{Binding WeightedFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>

        <!--? Monitor Based Randomization -->
        <GroupBox Grid.Row="4" Grid.Column="1"  Margin="3">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Vertical" Margin="0 0 0 5">
                    <TextBlock Text="On Larger Monitors Prefer: " FontWeight="Medium"/>
                    <CheckBox Content="Higher Ranked Wallpapers" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                    <CheckBox Content="Higher Resolution Wallpapers" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                </StackPanel>

            </StackPanel>
        </GroupBox>

        <!-- ? Video Settings -->
        <GroupBox Grid.Row="2" Grid.Column="2" Grid.RowSpan="3" Margin="3" DataContext="{Binding Settings.ThemeSettings.VideoSettings}">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Video / GIF Settings" Margin="5" FontWeight="Bold" FontStyle="Italic" HorizontalAlignment="Center"/>

                <StackPanel Orientation="Vertical" adonisExtensions:LayerExtension.IncreaseLayer="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock  Grid.Row="1" Grid.Column="1" Text="Minimum Loops" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="1" Grid.Column="2" adonisExtensions:WatermarkExtension.Watermark="Loops..." Margin="5 5 3 0"
                                 Text="{Binding MinimumLoops, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Grid.Row="2" Grid.Column="1"  Text="Maximum Time" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="2" adonisExtensions:WatermarkExtension.Watermark="Seconds..." Margin="5 5 3 0"
                                 Text="{Binding MaximumTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Grid.Row="3" Grid.Column="1"  Text="Default Volume" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="3" Grid.Column="2"  adonisExtensions:WatermarkExtension.Watermark="Volume..." Margin="5 5 3 0" adonisExtensions:LayerExtension.Layer="3"
                                 Text="{Binding DefaultVideoVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInput}"/>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="0 5 0 5">
                    <TextBlock Text="Mute Audio If" FontWeight="Medium"/>
                    <CheckBox Content="Audio is Playing" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"
                              IsChecked="{Binding MuteIfAudioPlaying, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Content="Application is Focused" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"
                              IsChecked="{Binding MuteIfApplicationFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Content="Application is Maximized" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"
                              IsChecked="{Binding MuteIfApplicationMaximized, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 5 0 5">
                    <TextBlock Text="Pause Video If (Per Monitor)" FontWeight="Medium"/>
                    <CheckBox Content="Application is Open" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                    <CheckBox Content="Application is Focused" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                    <CheckBox Content="Application is Maximized" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 5 0 5">
                    <TextBlock Text="Pause Video If (All Monitors)" FontWeight="Medium"/>
                    <CheckBox Content="Application is Open" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                    <CheckBox Content="Application is Focused" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                    <CheckBox Content="Application is Maximized" adonisExtensions:LayerExtension.Layer="3" Margin="5 3 5 3"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>

        <!-- ? Other Settings -->
        <StackPanel Grid.Row="5" Grid.Column="1">

            <Button Width="175" Content="Rank Distribution Graph" Margin="3" Command="{Binding ToggleRankGraphCommand}" HorizontalAlignment="Left"/>

            <StackPanel Orientation="Horizontal" DataContext="{Binding Settings}">
                <TextBlock Text="Window Height Offset" VerticalAlignment="Center"/>
                <TextBox adonisExtensions:WatermarkExtension.Watermark="Height..." Margin="5 5 3 0"
                         Text="{Binding WindowHeightOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInputPlusMinus}"/>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" DataContext="{Binding Settings}">
                <TextBlock Text="Window Width Offset" VerticalAlignment="Center"/>
                <TextBox adonisExtensions:WatermarkExtension.Watermark="Width..." Margin="5 5 3 0"
                         Text="{Binding WindowWidthOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxNumInputPlusMinus}"/>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

            <CheckBox Content="Enable Detection of Disabled Images" ToolTip="This allows disabled images to appear in the image selector" Margin="3"
                      IsChecked="{Binding Settings.ThemeSettings.EnableDetectionOfInactiveImages}"/>

        </StackPanel>

        <!--? Rank Graph Drawer -->
        <hc:Drawer Dock="Top" ShowMode="Cover" IsOpen="{Binding RankGraphToggle}">
            <GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="{adonisUi:Space 1}"/>-->
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Height="{StaticResource RankGraphHeight}"
                              Grid.Row="2" Grid.Column="1" adonisExtensions:LayerExtension.IncreaseLayer="True" adonisExtensions:LayerExtension.Layer="2">
                        <!--? Header -->
                        <GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Title -->
                                <TextBlock Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Rank Distribution Graph"
                                           FontWeight="Medium" Margin="0 0 0 5">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Rank Counters -->
                                <StackPanel Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal">
                                    <TextBlock Text="{Binding RankedText}" Margin="0 0 10 0" FontStyle="Normal">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Text="{Binding UnrankedText}" Margin="0 0 10 0" FontStyle="Normal">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <TextBlock Text="{Binding ImagesInSetText}" Margin="0 0 10 0" FontStyle="Normal">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <TextBlock Text="{Binding DisabledText}" FontStyle="Normal">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource FaintHeader}"/>
                                        </TextBlock.Style>
                                        <TextBlock.ToolTip>Disabled Images (Disabled Images + Images Dependent On Sets)</TextBlock.ToolTip>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"  Orientation="Horizontal" Margin="0 5 0 0" HorizontalAlignment="Center"
                                            adonisExtensions:LayerExtension.Layer="3">
                                    <CheckBox Content="All" IsChecked="{Binding AllColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="Static" IsChecked="{Binding StaticColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="GIF" IsChecked="{Binding GifColumnToggle}" Margin="0 0 10 0"/>
                                    <CheckBox Content="Video" IsChecked="{Binding VideoColumnToggle}" Margin="0 0 10 0"/>
                                </StackPanel>

                                <!-- Exit -->
                                <Button Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right" Content="X" Command="{Binding CloseRankGraphCommand}"
                                        Margin="5 0 5 0" Foreground="Red" FontSize="16" FontWeight="Bold" adonisExtensions:LayerExtension.Layer="1"/>
                            </Grid>
                        </GroupBox.Header>

                        <lvc:CartesianChart Series="{Binding RankSeries}" LegendPosition="Top" ZoomMode="X"/>

                    </GroupBox>
                </Grid>
            </GroupBox>

        </hc:Drawer>

    </Grid>
</views:MvxWpfView>
