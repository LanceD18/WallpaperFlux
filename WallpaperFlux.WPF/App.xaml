<views:MvxApplication x:Class="WallpaperFlux.WPF.App"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WallpaperFlux.WPF"
    xmlns:converters="clr-namespace:LanceTools.WPF.Converters;assembly=LanceTools.WPF"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:validationrules="clr-namespace:WallpaperFlux.WPF.ValidationRules"
    StartupUri="MainWindow.xaml">

    <Application.Resources>

        <!-- If you need a new ResourceDictionary, add it to the MergedDictionaries category, do NOT give this dictionary an x:Key otherwise none of the merged dictionaries will work! -->
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>

                <!-- Property Elements-->
                <ResourceDictionary>
                    <!-- Converters -->
                    <converters:EnumToStringConverter x:Key="EnumToStringConverter"/>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <converters:BooleanInverterConverter x:Key="BooleanInverterConverter"/>

                    <converters:ValueConverterGroup x:Key="BooleanToVisibilityInvertedConverter">
                        <converters:BooleanInverterConverter/>
                        <converters:BooleanToVisibilityConverter/>
                    </converters:ValueConverterGroup>

                    <!-- Static Values -->
                    <x:Static x:Key="MaxInt32" Member="system:Int32.MaxValue"/>

                    <!-- Adonis -->
                    <system:Double x:Key="{x:Static adonisUi:Dimensions.CursorSpotlightRelativeSize}">0.75</system:Double>
                </ResourceDictionary>

                <!-- Styles -->
                <ResourceDictionary>
                    <Style x:Key="TextBoxNumInput" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="TextAlignment" Value="Center"/>
                        <!--<EventSetter Event="GotFocus" Handler="TextBox_GotFocus_FocusText"/>-->
                        <EventSetter Event="KeyDown" Handler="OnKeyEnterDown_LoseFocus"/>
                        <EventSetter Event="PreviewTextInput" Handler="OnPreviewTextInput_PositiveNumbersOnly"/>
                        <EventSetter Event="PreviewMouseDown" Handler="TextBox_MouseEvent_FocusText"/>
                        <EventSetter Event="PreviewMouseUp" Handler="TextBox_MouseEvent_FocusText"/>
                    </Style>

                    <Style x:Key="FaintHeader" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Foreground" Value="LightSlateGray"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>


    </Application.Resources>
</views:MvxApplication>
